Requirements
=========
.NET 4.5
Newtonsoft.Json

Class API
======
Properties :
	STRING		- burl 			- Bitcoin > Fiat API URL (Currently using blockhain.info)
	STRING		- curl 			- Cryptopia API URL
	STRING		- APIkey, APIsecret		- API Keypairs for private authentication
	BOOL		- keysProvided 		- Set once keys are set, checked by private API functions.
	INT		- nonce			- Incrementing number for communications
	LIST<INT>	- numNames		- Array of INTs which correspond to Coin "Symbol" strings. ie. "888", "666" or "1337" in place of "BTC", "LTC" etc.
	OBJECT		- fileLocker		- Object used to lock up our threaded log writer.
	BOOL		- logEnabled		- Allows file logging of API comms.
Methods :
################################################ PUBLIC METHODS ################################################
	Constructors (null) & (string key, string secret)
		- Either instantiate an empty API object for public queries and future key setting OR instantiate the object with the API key and secret.
	setKeys(string key, string secret)
		- Provide an existing API object a pair of API Keys.
	serialize(null)
		- Serialise the API object and return it as a JSON STRING (Used for saving API Keys)
################################################ PUBLIC API CALLS ################################################
	getFiatPrice(null)
		- Returns GBP, USD, AUD, -> BTC Prices as a JSON STRING
	getCurrencies(null)
		- Returns Cryptopia Coin list as a JSON STRING
	getTradePairs(null)
		- Returns Tradepair list as JSON STRING
	getMarkets(string basecur, string hours)
		- Returns All Markets or by specified base currency for a specified number of hours as a JSON STRING
	getMarket(string market, string hours)
		- Returns specified market data for specified hours as JSON STRING
	getMarketHistory(string market, string hours)
		- Returns market history for specified market over specified hours as JSON STRING.
	getMarketOrders(string market, string count)
		- Returns specified count of buy and sell orders for specified market as JSON STRING
	getMarketOrderGroups(string marketgroup, string count)
		- Returns specified count of buy and sell orders for specified range of market groups as JSON STRING
################################################ PRIVATE API CALLS ################################################
	getBalance(string currency)
		- Returns Balance for All or specified currency as JSON STRING
	getOpenOrders(string market, string count)
		- Returns specified count of open orders for specified or all balances.
	getTradeHistory(string market, string count)
		- Returns specified count of trade histories for all or specified tradepair as JSON STRING
	getTransactions(string type, string count)
		- Returns specified count of Transactions of type "Deposit" or "Withdraw" as JSON STRING
	submitTrade(string market, string type, string rate, string amount)
		- Submit a trade for the specified market of type "Buy" or "Sell" for the amount and rate specified, Returns response as JSON STRING
	cancelTrade(string type, string cancelid)
		- Cancels "All", "Trade" or "TradePair" types.  cancel ID is required for Trade (Order ID) and TradePair (Tradepair ID), Returns response as JSON STRING
	submitTip(string currency, string users, string amount)
		- Tips the "trollbox" (chat window) a specified amount of a currency to be divided up by number of users.  Returns response as JSON STRING
	submitWithdraw(string currency, string address, string string amount, string payid=null)
		- Submit a withdrawal of specified currency and amount to the address provided.  PayID is only required for CryptoNote Coins.  ALL withdrawal
		  addresses MUST be copied into the address book in your account settings over at cryptopia.co.nz, returns response as JSON STRING
	submitTransfer(string currency, string username, string amount)
		- Transfer amount of currency to cryptopia username, returns response as JSON STRING
############################################### INTERNAL FUNCTIONS ###############################################
	noncifier(null)
		- Increment the nonce, add an epoch, make it really unique, bigly!, Return Nonce string
	currencyKeyer(string currency)
		- Returns "Currency" or "CurrencyId" depending on string provided, numNames list used to determine here.
	marketKeyer(string market)
		- Returns "Market" or "TradePairId" depending on string provided
	makeBTCQuery(null)
		- Handle the Fiat Price request, returns JSON STRING
	makePubQuery(command)
		- Handle the URL Command, returns JSON STRING
	makePrivQuery(command, params)
		- Handle the URL Command, Parameters as well as encryption and authentication. returns JSON STRING
	logger(string logLine)
		- Threads a file writer to append logLine to API log **IF** logEnabled = true
	writeLog(string logLine)
		- Writes the data in a thread with file access locking

The APIResponse Class is merely a way to hold onto dynamic JSON data whilst the API class determines whether it was a successful request or not.  Since it's only seven lines
long, I've just included it with the API.cs file.